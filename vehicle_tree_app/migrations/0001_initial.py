# Generated by Django 5.1.1 on 2024-09-29 11:02

import django.db.models.deletion
import django.utils.timezone
import django_prometheus.models
import vehicle_tree_app.models.users
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('node_name_en', models.CharField(default='', max_length=200)),
                ('node_name_fa', models.CharField(max_length=200)),
                ('parent_id', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=(django_prometheus.models.ExportModelOperationsMixin('company'), models.Model),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('node_name_en', models.CharField(default='', max_length=200)),
                ('node_name_fa', models.CharField(max_length=200)),
                ('parent_id', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_prometheus.models.ExportModelOperationsMixin('vehicle'), models.Model),
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='username')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='mobile')),
                ('is_active', models.BooleanField(default=False)),
                ('code', models.CharField(max_length=4, null=True, verbose_name='code')),
                ('expired_code', models.CharField(max_length=4, null=True, verbose_name='expired_code')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=(django_prometheus.models.ExportModelOperationsMixin('users'), models.Model),
            managers=[
                ('objects', vehicle_tree_app.models.users.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MenusTree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('parent_id', models.IntegerField()),
                ('node_name_en', models.CharField(default='', max_length=200)),
                ('node_name_fa', models.CharField(max_length=200)),
                ('img_url', models.CharField(blank=True, max_length=250, null=True)),
                ('node_type_name', models.CharField(blank=True, max_length=254, null=True)),
                ('status', models.CharField(blank=True, default='A', max_length=10)),
                ('is_new', models.BooleanField(default=False)),
                ('node_type_config_name', models.CharField(blank=True, max_length=255)),
                ('node_type_enum_id', models.IntegerField(default=0)),
                ('node_type_config_id', models.IntegerField(default=0)),
                ('fault_excel_info', models.TextField(blank=True)),
                ('node_type_feature_name', models.TextField(blank=True)),
                ('node_type_config_enum_id', models.IntegerField(default=0)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company', to='vehicle_tree_app.company')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicle', to='vehicle_tree_app.vehicle')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_prometheus.models.ExportModelOperationsMixin('menus'), models.Model),
        ),
    ]
